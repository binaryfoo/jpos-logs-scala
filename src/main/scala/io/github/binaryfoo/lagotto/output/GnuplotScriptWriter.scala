package io.github.binaryfoo.lagotto.output

object GnuplotScriptWriter {

  val ToSecondPrecision = """time\(HH:[m0]{2}:[s0]{2}\)""".r
  val ToMinutePrecision = """time\(HH:[m0]{2}\)""".r
  val DateTimeToSecondPrecision = """time\(yyyy-MM-dd HH:[m0]{2}:[s0]{2}\)""".r
  val DateTimeToMinutePrecision = """time\(yyyy-MM-dd HH:[m0]{2}\)""".r

  def write(fields: Seq[String], csvFileName: String, plotFileName: String, xRange: (String, String), multiplot: Boolean): String = {
    val timeFormat = fields.head match {
      case "time" => "%H:%M:%S"
      case ToSecondPrecision() => "%H:%M:%S"
      case ToMinutePrecision() => "%H:%M"
      case "date" => "%Y-%m-%d"
      case "datetime" => "%Y-%m-%d %H:%M:%S"
      case DateTimeToSecondPrecision() => "%Y-%m-%d %H:%M:%S"
      case DateTimeToMinutePrecision() => "%Y-%m-%d %H:%M"
    }
    val columns = fields.tail
    val (firstTime, lastTime) = xRange
    val multiplotOption = if (multiplot) s"multiplot layout ${columns.size},1 " else ""

    // using tab delimited data fails on empty cells: \t\t gets merged
    // line types cheat sheet: http://kunak.phsx.ku.edu/~sergei/Gnuplot/line_point_types.html

    val height = 960 * math.max(1, fields.size / 6)

    s"""#!/usr/bin/env gnuplot
        |set datafile separator ','
        |set terminal svg enhanced mouse standalone size 1280,$height
        |set output '$plotFileName.svg'
        |#set terminal png size 1280,$height
        |#set output '$plotFileName.png'
        |set xdata time
        |set timefmt '$timeFormat'
        |set format x '$timeFormat'
        |set $multiplotOption title 'Auto-generated by lago'
        |set lmargin 10
        |set xrange ['$firstTime':'$lastTime']
        |do for [i=2:${fields.size}] {
        |    plot '$csvFileName' using 1:i w lines lt 3 t column(i)
        |}
        |""".stripMargin
  }
}
